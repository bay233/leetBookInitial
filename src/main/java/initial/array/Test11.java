package initial.array;

public class Test11 {

    public static boolean isValidSudoku(char[][] board) {
        for (int i = 0; i < 9; i++) {
            int[] signrow = new int[10];
            int[] signcol = new int[10];
            for (int j = 0; j < 9; j++) {
                if (board[i][j] == '.') {

                } else if (signrow[board[i][j] - '0'] == 0) {
                    signrow[board[i][j] - '0'] = 1;
                } else {
                    return false;
                }

                if (board[j][i] == '.') {
                    continue;
                } else if (signcol[board[j][i] - '0'] == 0) {
                    signcol[board[j][i] - '0'] = 1;
                } else {
                    return false;
                }
            }
        }

        int i = 0;
        int j = 0;
        while (i < 9) {
            int[] sign = new int[10];
            for (int k = i; k < i + 3; k++) {
                for (int m = j; m < j + 3; m++) {
                    if (board[k][m] == '.') {
                        continue;
                    } else if (sign[board[k][m] - '0'] == 0) {
                        sign[board[k][m] - '0'] = 1;
                    } else {
                        return false;
                    }
                }
            }
            j += 3;
            if (j >= 9) {
                j = 0;
                i += 3;
            }
        }

        return true;
    }

    public static void main(String[] args) {
        char[][] board = new char[][]{
                {'8', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
        };// false

        char[][] board2 = new char[][]{
                {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
        }; // true


        char[][] board3 = new char[][]{
                {'.', '.', '.', '.', '5', '.', '.', '1', '.'},
                {'.', '4', '.', '3', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '3', '.', '.', '1'},
                {'8', '.', '.', '.', '.', '.', '.', '2', '.'},
                {'.', '.', '2', '.', '7', '.', '.', '.', '.'},
                {'.', '1', '5', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '2', '.', '.', '.'},
                {'.', '2', '.', '9', '.', '.', '.', '.', '.'},
                {'.', '.', '4', '.', '.', '.', '.', '.', '.'}
        }; // false

        boolean validSudoku = isValidSudoku(board3);
        System.out.println(validSudoku);
    }

}
